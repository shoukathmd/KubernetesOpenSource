# Setting PATH variable :
sudo nano ~/.bashrc
# set any PATH variable at the end of the file. 
then run :
source ~/.bashrc


# Installing cfssl on ubuntu VM

VERSION=$(curl --silent "https://api.github.com/repos/cloudflare/cfssl/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
VNUMBER=${VERSION#"v"}
wget https://github.com/cloudflare/cfssl/releases/download/${VERSION}/cfssl_${VNUMBER}_linux_amd64 -O cfssl
chmod +x cfssl
sudo mv cfssl /usr/local/bin
cfssl version

## run cluster locally

Clone the repository
In order to run kubernetes you must have the kubernetes code on the local machine. Cloning this repository is sufficient.

git clone --depth=1 https://github.com/kubernetes/kubernetes.git
The --depth=1 parameter is optional and will ensure a smaller download.

Starting the cluster
In a separate tab of your terminal, run the following:

cd kubernetes
./hack/local-up-cluster.sh
Since root access is sometimes needed to start/stop Kubernetes daemons, ./hack/local-up-cluster.sh may need to be run as root. 
If it reports failures, try this instead:

sudo ./hack/local-up-cluster.sh
This will build and start a lightweight local cluster, consisting of a master and a single node. Press Control+C to shut it down.

Note: If you've already compiled the Kubernetes components, you can avoid rebuilding them with the -O flag.

./hack/local-up-cluster.sh -O
You can use the ./cluster/kubectl.sh script to interact with the local cluster. ./hack/local-up-cluster.sh will print the commands to run to point kubectl at the local cluster.


